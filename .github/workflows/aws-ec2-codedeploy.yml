name: "aws-ec2-codedeploy"

on:
  workflow_dispatch:
    inputs:
      region:
        description: "AWS region"
        required: true
        default: "us-east-1"

jobs:
  # Building the jar artifact to deploy
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code from selected branch
        uses: actions/checkout@v4

      # Find and replace variables
      - name: Parse project to fit CodeDeploy __SERVICE_NAME__
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "__SERVICE_NAME__"
          replace: ${{ secrets.__SERVICE_NAME__ }}
          regex: false
          exclude: ".github/workflows/**" # Do not modify GitHub Actions files
      - name: Parse project to fit CodeDeploy __SERVICE_PORT__
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "__SERVICE_PORT__"
          replace: ${{ secrets.__SERVICE_PORT__ }}
          regex: false
          exclude: ".github/workflows/**" # Do not modify GitHub Actions files
      - name: Parse project to fit CodeDeploy __LOG_DIR__
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "__LOG_DIR__"
          replace: ${{ secrets.__LOG_DIR__ }}
          regex: false
          exclude: ".github/workflows/**" # Do not modify GitHub Actions files
      - name: Parse project to fit CodeDeploy __DEPLOY_LOG__
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "__DEPLOY_LOG__"
          replace: ${{ secrets.__DEPLOY_LOG__ }}
          regex: false
      - name: Parse project to fit CodeDeploy __DEPLOY_DIR__
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "__DEPLOY_DIR__"
          replace: ${{ secrets.__DEPLOY_DIR__ }}
          regex: false
          exclude: ".github/workflows/**" # Do not modify GitHub Actions files
      - name: Parse project to fit CodeDeploy __JAVA_VERSION__
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "__JAVA_VERSION__"
          replace: ${{ secrets.__JAVA_VERSION__ }}
          regex: false
          exclude: ".github/workflows/**" # Do not modify GitHub Actions files

      # Setup Java AMZ to build maven
      - name: Set up JDK 
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: "${{ secrets.__JAVA_VERSION__ }}"
          cache: maven

      # Package with Maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Move files to build folder
      - name: Move files to build folder
        run: |
          mkdir -p build 
          cp target/*.jar build
          cp .codedeploy/appspec.yml build
          cp .codedeploy/scripts/*.sh build
          ls -ln build

      # Make CodeDeploy scripts executable
      - name: Make CodeDeploy scripts executable
        run: chmod +x build/*.sh

      # Configure AWS Credential
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          aws-region: ${{ github.event.inputs.region }}

      # Upload Artifact to s3
      - name: Upload Artifact to s3
        run: |
          aws deploy push \
          --application-name ${{ secrets.AWS_CODE_DEPLOY_APP_NAME }} \
          --description "This is a push for deployment-${{ github.sha }}" \
          --ignore-hidden-files \
          --s3-location s3://${{ secrets.AWS_S3_BUCKET }}/deployment-${{ github.sha }}.zip \
          --source build

        # Create deployment to CodeDeploy
      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ${{ secrets.AWS_CODE_DEPLOY_APP_NAME }} \
           --description "This is a deployment for deployment-${{ github.sha }}" \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --deployment-group-name ${{ secrets.AWS_CODE_DEPLOY_GROUP }} \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},key=deployment-${{ github.sha }}.zip,bundleType=zip \
